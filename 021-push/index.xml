<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>強く押す話 on Message Passing</title>
    <link>https://messagepassing.github.io/021-push/</link>
    <description>Recent content in 強く押す話 on Message Passing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://messagepassing.github.io/021-push/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>代わりに必要なのは何なのか？</title>
      <link>https://messagepassing.github.io/021-push/04-karino2/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://messagepassing.github.io/021-push/04-karino2/</guid>
      <description>議論がおこらないことは誰にとっての問題か？ kzysさんが議論がおこらないことが問題と言っているのを見て、割と説得された部分がある。 けれど、ハンドルを変えて転生とかメンターとかは、自分個人がどう問題に対処するかという話で、 困る対象は自分という前提があるように思う。
自分が困ったおっさんのままで、ますます困った度合いを深める、というのは我々おっさんには由々しき事態ではあるけれど（そしてそれは事実のような気もする…）、 それ以外にもプロジェクトにとっての問題という部分も多いと思った。 だからチームとして、組織としてどうにかしたい問題のようにも思う。
強く押すという問題では無く語気を弱めても議論が起こるべき所で起こらない事が良くある、 というのもなかなか説得される所で、実際語気の問題は原因の全体の中でそんなに多くを占めてないかもしれない。 全く影響が無いとは思わないし、ある程度は押す強さなどで違いも出うるとは思うけれど、 それだけでは十分では無い、というのは、確かにそうかも、と思った。
一方で十分で無いなら他に何が出来るのか、というのは良く分からない所もある。実際問題としてそうした何かが足りてない結果の問題は良く見かける。 ちょっと自分の挙げた具体例を振り返ってみたい。
惰性で続く不要になった事を無くすのに必要な事 自分が例にちょろった挙げた、いらないミーティングをなくすのには強く押していく必要がある、というような話を考えてみる。
こういう惰性で続いてるが不要なものというのは、大多数が無くしたいと思っていても、一人くらいは「現状はうまく機能してないだけで改善すれば有意義になるはずだ」と思っていたりして、無くす事には反対だったりする（しかもその人は往々にして偉い人だったりする）。 そういう場合は、無くすのに対立が必要だ。
こういう時には自分は、強く押したり押し返したりが日常なチームの方か不要な物をうまく無くしていける、と主張した訳だ。 だが、それはkzysさんの言を借りれば、本当は議論が起こらないという大きな問題の症状の一部であり、押しの強さどうこうという問題では無いんじゃないか、という事と理解した。 それは確かにそうかもしれない。
そうした無駄を無くして行こうという空気が既にチームで広く共有されていれば、押しの強さという事とは関係なく問題提起はされるような気もする。 そういう雰囲気を作るにはある程度は対立をどれくらい恐れないか、という性質も影響している気もするし、対立を恐れない事と押しの強さも関係はある気もするけれど、本質では無いと言われるとそうかもしれない。
ただそれでは割と良く発生するこの手の無駄を無くすのに、有効な事というのは何なのかしらね？
余談だけど、日本企業では、以前働いた印象としてはリクルート系列の企業はめっちゃ押しが強くて、その結果うまく発生する無駄に対処出来ていた印象がある。 その後別の日本企業でコンセンサス重視で全然いろいろな事が前に進まない所と仕事した時には、 あれはあれで良い所はあったんだなぁ、と思った。 押しの強さとは違う何かが本質かもしれないけれど、因果関係は無くても相関はあるようにも思う。
コードレビューで見逃しがちな話 もうひとつ、こちらがメインに思いつくのは、やはりレビューなどで本当は良くないと思っている事を面倒で流してしまう、という話。 面倒さについてはmorritaさんが十分に話ていて、結論の押し返すべきかは場合による、コストがある以上トレードオフがあるというのが最終的に正しそうなのも最初から皆が同意しそうなものに思う。
コードレビューの話でちょっとミーティングと違うのは、良く無いと思った事が本当に良くないのかは、 ミーティングなどのケースよりも曖昧だという部分があると思う。 だいたい惰性で続いているミーティングみたいなのは本来あるべき姿よりも明らかに無駄な側に倒れているので、 だいたい全部無くすように頑張っても無くしすぎには普通はならない。
でもコードの場合は好みと実際に問題となる事の区別は凄く曖昧で、言わない方がいい事も結構ありそう。 一方で面倒になっていろいろLGTMしていると明らかにこれはやりすぎでは無いか、と自分で感じる事もあり、 また、組織やチームによってコードのそうしたクオリティに（良い意味で）意識高いチームとそうでないチームの差は大きいとも自分は感じている。
こちらのケースではやらなさすぎとやりすぎの両方の問題がありうるので、とりあえずもっとやる方に倒しておけば良いという問題では無いと思うけれど、 気にしなさすぎるチームになってしまうのはやはりあまり良くなくて、そうならない為の何かは必要な気もする。
それが押しの強さなのか？というと違うかもしれない。 でも怖くて面倒な人がいる方が規律は保たれがちな気はする。気のせいかもしれないが。
今の時代に必要な事 どちらを見ても、押しの強さとは違う何かが本質的な問題だ、というのは、そうかもしれないな、という気がする。 少なくとも押しの強さが無くても解決出来ているような状態を想像する事は出来る。
一方でその「違う本質的な何か」というのを改善していく為に具体的にどう行動していったらいいのかは良く分からないところ。
今ちょうどスティーブ・ジョブズを読んでいて、 幾つかの実績は本当に彼にしか出来ないなと思われるようなものがあって、 一方でパワハラ以外の何物でも無い、現代なら明らかに許されないような態度が日常的でもある。
そうしたものは多くのスキャンダルや被害者の頑張りで改善してきた結果今のスタンダードがあって、 それは全く被害者側が正しいとも思っている。
自分の押しの強さというのがそういうのと同じとは思っていないにせよ、 時代が穏やかな話し合い側に進んでいるとは認識している。だからこそ押しの強さ以外の何かの重要性はより高まっているようにも思える。
それが何なのかはわからないし、US大手企業があまりうまくやれているようにも見えないのだけれど、 そもそもそういうのは大手が苦手とする所なので、もうちょっと得意な所の人の話を聴くのが良いのかもしれない。
 kzys 「心理的安全性を高めて、活発な議論が起こるチームを作りましょう!」というのが教科書的答えだとは思うんですが、実際のところなにしたら良いのかよくわからないですよね。会社で飲み会したり、脱出ゲームに行ったりして、仲良くさせようとするのもよく見かけるけど、どのくらい効果があるかは正直疑問。
コードレビューは、本当にまずいやつ (e.g. 無限にリトライする) と、好みや程度の問題 (e.g. またこのクラスにコード足すんですか) は自分の中では結構明白で、後者は指摘しつつもまあ今回はこのままで良いよ、とすることもあります。チケット作ってくれれば良し、とか。Conventional Comments とか導入すると良いのかもしれない。
  morrita 読み直してみると自分はチームの問題をどうにかする気が微塵もないね。どうなんだそれは・・・。</description>
    </item>
    
    <item>
      <title>議論と関係性</title>
      <link>https://messagepassing.github.io/021-push/03-morrita/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://messagepassing.github.io/021-push/03-morrita/</guid>
      <description>強い言葉、有野さんがどのくらい力強くあるいは jerk-ish に発言したのか第三者の我々にはわからないけれど、若干 jerk ぽかったという設定でなんか書いてみたい。
この話はいくつか切り口があると思う。
 気の弱いキャラのプログラマでも強い語調の相手に頑張って押し返すべきなのか 自分は時には強い語調で問題をはっきりと伝えるべきなのか  めんどくささとトレードオフ 2 は和良さんが書いてくれているのでまず 1 から考えてみる
自分は（おっさん力や seniority によって薄まったとは言え）気の弱い方なのもあり、強く主張されると「めんどくせえなーハイハイ」といって微妙であれなんであれ相手の主張を受け入れる傾向はある。
「めんどくさい」というのは問題の根幹にある気がする。当たり障りのない言い方をすると、議論にはコストがかかる。
わかりやすいコストは時間。コードレビューとかだと、議論のラウンドを重ねるよりは相手の言うことを飲んでささっと LGTM してもらう方が速く仕事が片付く。コード品質は犠牲になる・・・というか自分の好みからはちょっとズレるかもしれない。でも move fast の方がしばしば大事。相手がエラかったり忙しかったりで返事の遅い人だと議論に時間がかかるため、妥協して仕事を進めたい引力は更に強くなる。
コストその 2 は精神的なもので、まあ疲れるよね議論。自分の考えに説得力を与えるよう整理するのって大変だし、強い言葉すなわち感情的なダメージのある言葉に晒されるのも堪える。そうですねハイハイといえばダメージは最初の一回分だけで済み、自分のメッセージを考える苦労もない。
といった理由から人々「めんどくせえなーハイハイ」をしているのだろうけれど、ほんとはめんどくさがらず押し返すべきなのだろうか？というと、場合による。コストがある以上、トレードオフもある。
ただめんどくさい側に振りすぎた我が身を反省すると、めんどくさがってばっかりいると議論が苦手なままで、コストがちっとも下がらないんだよね。自分の主張を整理するのは、練習すればできるようになる。角を立てない対話技法にもスキルはある。時間がかかるのも、忙しい相手のアテンションが他に行く前に返事をサッとするだとか、返事がないときにチャットでつつくだとか、やりようはある。
自分は殺伐とした環境で仕事をしていた影響もあり返事の催促が壊滅的に苦手で、過去にすごく多くの時間を無駄にした。最近はマシになったけれど、気負わずチャットで催促できる程度には図太さが必要だった。
なので議論や主張 (argument) は面倒でも普段からちょっとずつ練習しておくと、強い言葉を使う相手と渡り合う時のトレードオフも変わるんじゃないかな。チーム全体がクソ忙しかったり殺伐してたりすると練習する気も起きないかもしれないけど、そういう時は・・・どうするんだろうね。友達と共同プロジェクトをやってみたり、平和そうなオープンソースプロジェクトに PR を書いてみたりすると練習になるのかもしれない。そこまで頑張る価値があるのかはわからない。議論のスキルを育てられないのは不幸だけれど、不幸な職場というのはある。
変化する関係性 これを逆側から見ると、議論が得意で強い言葉に躊躇のない人が議論の苦手な人と対話をしたいなら、相手のトレードオフを変えてあげないといけない。それが和良さんの主張の原点だと思う。強い言葉がデフォルトな jark-ish/candid people にとって言葉を sugarcoat するのはコストなのかもしれないけれど、自分の勤務先とかだとそういう courtesy は前提になってるし、昨今はそれが段々とメインストリームになってきてるんじゃないかな。
別の見方をすると、議論が得意な人は議論が苦手な人を啓蒙する必要がある。ある種のシニア仕草(©和良)かもしれない。
ただまともな人は成長するし健全な人間関係は成熟するので、必要とされる politeness や courtesy も時の流れとともに変わると思う。お互いに付き合いが長くなれば素の自分も出しやすくなるし、会話もよりカジュアルになりうる。いつまでも過剰に他所他所しく丁寧である必要はない。逆に歯に衣着せぬ会話をしたいなら、まず相手との相互理解を深めないといけない。
有野さんは冒頭で、我々は割と押し返すのが得意なのではと書いたけれど、それは付き合いの長さもあると思う。我々、もう 10 年前後の付き合いがあるよく知った仲なわけです。そこに親しき仲の礼儀以上のものはないじゃん。かわりに時々口を滑らせて反省することもないではないけれど。
テック企業、割と人の流れが速い。景気のいいチームはどんどん人が増えるし、景気の悪いチームからは人が逃げていく。そうでもなくても飽きたりなんだりで人が入れ替わる。これは風通しの良さにも繋がるので悪いことばかりではない。ただチームとしての成熟には限度がある。先に書いたような courtesy はこの流動性が前提にあると思う。オープンソースプロジェクトなんかは雇用の摩擦がないから、この流動性や他者の偏在がより強くなる。
ただソフトウェア開発チームが常にこうである必要もない。
書籍 &amp;ldquo;Pragmatic Programmer&amp;rdquo; の二版には &amp;ldquo;Pragmatic Teams&amp;rdquo; という節があって、良いチームとはこんなものだと説明している:
 A pragmatic team is small, under 10-12 or so members.</description>
    </item>
    
    <item>
      <title>強さの程度</title>
      <link>https://messagepassing.github.io/021-push/02-kzys/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://messagepassing.github.io/021-push/02-kzys/</guid>
      <description>強く押す、いくつか段階があって
 「A は X です。お前はバカか?」 「A は X です。」 「もし間違っていたら教えて欲しいのですが、私が思うに、A は X です。」  1は、会社でやる人はいねーよ、という感じですが、例えば Ulrich Drepper とか昔の Linus Torvalds とか、古のオープンソースソフトウェア開発者には一言多い罵倒表現がキャラクターの一部として受け入れられていた人々がいたと思う。ただ、Linus Torvalds が過去の振る舞いを反省・謝罪し、Linux をはじめとするオープンソースソフトウェアに行動規範が取り入れられた現代では、これはどんなにコードが書けても受け入れられない態度になりつつある。罵倒が好きだった人は他をあたってください。
karino さんが言っているのは2のほうで、世の中には、2はきつすぎるので3がデフォルトの人々もいる。これに関しては、こと社内やチーム内のコミュニケーションについてら私も原則2なので、あんまり「けしからん」と言えない。「もし間違っていたら教えて欲しいのですが、私が思うに」は大前提だし、そもそも長いし、一々書かなくてもよくない?
非ネイティブが考える語気を弱める方法 とはいえ、強い言葉にしたいというよりは簡潔さを重んじているので、ちょっとの努力でソフトになるところは、すこし気をつけてもいる。
例えば、あんまり「あなたが&amp;hellip;」というのはキツいかなあと思って「You should」ではなく「We should」「This function should」にしてみたりとか、何かを主張するときは man なりリファレンスマニュアルなり、ソースをきちんと示して、反論ないし確認しやすくするとか、何かシステムコールとかの動作を確認した時はその結果を、していないときは「I haven’t confirmed that though」とか付け足すとか、そういう気は使う。
「It would be great if you could &amp;hellip;」とかは、さすがにあまり言わない。グレートもなにも、変更してくれないと承認しないつもりだし、慣用句なのはわかっているけど嘘をついているような気がしてしまう。
ただ、実際のところ私は非ネイティブスピーカーなので、ネイティブの人々がどう受け取っているのかは謎。さらに私のコメントを読んでいる人も非ネイティブスピーカーだったりするので、彼らがネイティブ同様に受け取っているかも謎ではある。
議論がおこらないことが問題である あと「強い言葉をつかうと、案外通ってしまって困る」というのは「議論がおこらない」という大きな問題の一部で、それが本当に言葉使いのせいで起こっているのかはあやしい。
どんなに語気を弱めても
 あのひとはチーム歴も長いし、彼が言ってるんだから正しいのでは 私はここは詳しくないので、彼女の言っていることが正しいのでは このプロジェクトは締切も近いし、いまさらひっくり返すようなことを言っては悪いのでは とか、色々な理由で議論を避けてしまうひとはいる。  デザインを文章にまとめて早期に話し合うというのは最後の締切問題には有効だけど、そう思ってレビューすると、こんどはデザインに正統感というか、みんなで話し合って決めた良いデザイン感が出てしまって、それが議論を避ける理由になったりするので難しい。実装してダメだったら、それはダメなデザインですよ…。
仕事に限らず、アドバイスを聞いたり聞かなかったりして中年になった我々に、改めてアドバイスをしたり議論をふっかける人々って減ってきていて、これはどうするべきなのかわからない。インターネットだけならハンドルを捨てて生まれ変わることも出来るし、アメリカの人々はメンターをつけるのが好きなように思う。わたしはどちらもあまり経験がない。
 morrita 同意なんですけど、こういうのってどのくらい北米大企業仕草なんでしょうね。
東京の中小零細で働いていた頃の自分は (非言語的なコミュニケーションも含めると) 1.5 くらいだったと思うんだけど、それは自分が未熟だったのか、そういう時代だったのか、そういう空間だったのか、どれなんだろうなあとよく思うのだよね。ろくでもなかったと思う一方、淡々と 2-2.5 くらいで振る舞う当時の自分を想像するのも難しい。
  kzys 私もミクシィで働いていたころよりは、というともう10年前なんですが、ナイスな人間になれたんじゃないのかなあ。スタート地点が後ろすぎたけれど。当時に迷惑をかけた人々には申し訳ない&amp;hellip;。</description>
    </item>
    
    <item>
      <title>強い言葉にまつわる話</title>
      <link>https://messagepassing.github.io/021-push/01-karino2/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://messagepassing.github.io/021-push/01-karino2/</guid>
      <description>前回、若い頃はおっさんに説教されて大変だよね〜、という感じの話をした所、「いや、別に…」って感じの反応だった。 まったくここの人たちはもう日本人らしさを失ってしまっていて、普通の日本人と言えそうなのは自分しか居ないな、やれやれ、と思うのだった。
そういえば以前仕事で、強い調子で確認をすると本来反論があるべき所で通ってしまう、という事があって、 同時期にMessage Passing内で締め切りルールをどうするか、を話し合ってた時は割とすぐ押し返してくれるというか、 あまり押しの強さとか気にしなくても良い気軽さがあって良いな、と思った事があった。 その時もここの人はなんか普通の日本人らしさに欠ける気がするな、と思った気がする。
今回は強く押す、とその反発の強さ的な事を少し話してみたい。
強く押す、具体例 強く押すにもいろいろあってその違いで大違いなので具体例を出したい所だけれど、だいたいそうしたケースは込み入った状況なので説明が難しい。 いくつか端的に記してみると、
 一つのUnitTestのテストケースになんだか良くわからない引数がたくさんで実行してassertまでするような関数を引数を変えて何度か呼び出していて、何のテストをしているか良くわからないのがあったので、setupやexecuteの部分をメソッドにして共有して、複数のテストに分けてくれ CIを導入したとの事なので、結果の確認方法やfailした時の修正の仕方、修正の確認方法をWikiに書いてくれ  これらは実際にはこちらが誤解していて、そのままが良かったり根本的に全然違う所に問題があったりした。 実際はもっと良く問題を理解するために質問を重ねなくてはいけなかったのだが、 こちらは問題を理解したと勘違いして間違った結論を提示している。
強くなにかを思い込んでいて、推奨の行動を正しいと（この場合は誤って）確信していて、それを通そうとしている、 みたいなケースをイメージしている。
これだけだと「強い」というのは処方箋が不当に具体的すぎる、という意味で、それだけだと「強く押す」という感じもしない。 けれど、なにかを間違って強く思い込んでいて答えに確信を持っている時は、 言葉や態度も強くなっている場合は多く、そうした「考えを押し通そうとしている」時の強さみたいなのをなんとなく「強く押す」と言っている。
ソフトウェア開発では、勘違いをはっきりさせる必要が高い ソフトウェア開発は、日常生活よりも勘違いや間違いというのを明確にする必要があるシチュエーションが多い気がする。 物理とか数学の大学の研究室とかもそういうものなのでプログラムだけの特別な事、という訳では無いと思うのだけれど、 やはり論理に属するものは、普通の日常的な事よりも明確に正解とか間違いが出てくるもので、しかもその違いをはっきりさせる必要がある事が多いのでは無いか。
日常会話においても相手がなにかを理解していない、と思う事は多い。 例えばサーフィンしてて、もっとショルダー側で乗ったほうがいい、という話をしている時に、それはつまりもっと左側に行けという意味で言っているのに波を選ぶ話と勘違いしている、とかそういう事はある。 ただそういう時はだいたいすぐに次の波が来てみんな移動を開始してうやむやになる。
サーフィンに限らず、そんなに重要な話で無ければ勘違いをしてるな、と思ってもはっきりさせないでも別に構わない事は多い。 そもそもに「勘違いをしているな」と思っても、実際は勘違いじゃないかもしれない。 そうした事をいちいちはっきりさせる必要は無いし、普通の日常的なコミュニケーションにおいては、 そういうのをはっきりさせるのはかえって問題を引き起こすだけの場合もある。
一方、ソフトウェア開発に関する事は、はっきりさせる必要がある事が日常の事柄よりも多いと思う。 ある処理をそこでやっている理由、ある関数に引数がある理由、そうした議論対象の個々の選択は背後に多くの込み入った事情があって、 そうした事に誤解や勘違いが良く入り込む。 そうした勘違いはなぁなぁにして済ますと問題を起こすので、いちいちはっきりさせる必要がある。 そうしたはっきりさせる、という事は、非人間的というか、 相手を追い詰めてしまうような側面を持つと思う。
そういうした勘違いに直面する機会が凄く多いというのは、ソフトウェア開発の特徴なのでは無いか。
強く押す事と押し返してもらう事 勘違いしている状態というのは、なにか間違った思い込みがある状態なので、 普通に話すだけでそれに気づくのは難しい。 より断定的で、より強く主張する方が思い込みを正すのには向いている場合もある。
一方で相手が勘違いしている、と思っているが、実際は自分の側が勘違いしている事も良くある。 その場合も強く主張してくれる方が自分の勘違いに気づきやすい。 だから相手が勘違いしていると思った時にはこちらは強い調子で押して、こちらが間違っている時には強く押し返してくれると話は早い。 自分としては強く押して、相手も必要に応じて強く押し返してきてくれる事を期待したい。
でもこういうのって適性があって、自分は違う、と思う事でも、強く言うのが苦手な人というのが居る。 そういう人が多いチームで自分がなにかを強く押してしまうと、本来自分が間違っている事でも通ってしまったりする。 通したい訳では無いので自分の側の問題とも思うが、一方で適性としてそういうチームに自分が向いてないという話のような気もするので、 反省すべきかよそに移るべきかは良くわからない所。
message passingで記事を書いている人は、傾向として自分が正しいと思う事に関しては押し返すのが得意な人ばかりと思うがどうだろう？ それはUS企業適性なのか？主語が大きすぎ？
US企業でもアジア系はどちらかといえば喋りが不十分な事が多いというのが自分の印象で、そんなに押しが強いとは思わないのだけれど、 日本企業の環境の中に置くと違って見えるというか、強く押しても押し返してくれる人が多い気がする。 日本企業でもそういうカルチャーの会社はあるので日本とか米国って問題じゃないかもしれないけれど、そういう傾向はあるような？
そもそも強く押すのはどうなのか？ 自分は強く押したら押し返して欲しい、と思う方だけれど、そもそも強く押す事自体どうなの？という話は皆が思う所だろう。
単に表面だけ見れば「同じ事でももっとソフトに言う事は出来る」みたいなのが正しい答えのようにも聞こえるし、 最近はNo brilliant jerksみたいなのが流行ってもいたので、強く押すのが間違いという気もする。Brilliant jerkというのとはちょっと違う気もするけれど。
爽やかな一日の始めにissue trackerとかメールで喧嘩腰でやりとりが続いているのを目にすると、その日一日が台無しになる気分にもなる。 そういうのは嫌だよなぁ。 そういうチームは自分はすぐ辞めてしまう気がする。</description>
    </item>
    
  </channel>
</rss>
